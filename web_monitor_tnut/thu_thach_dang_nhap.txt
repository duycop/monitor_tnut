today 26.9.2024
we:
 - login chỉ show khi biến logined=false
 - không cần nhập gì: post action:check_logined
	auto kèm sid
	=> api bảo ok+user info
 - khi cố tình fake sid (thất bại), fake logined=true
	gửi đi được từ client: action:change_statsu, id, new status
	bị server  check 35^24: sid sai
	báo lỗi
 - sql: check uid+pwd by where toán tử pwd=@pwd
	thì @pwd là các biến thể HOA thường of pwd xịn=> OK
	pass bằng: dùng hàm băm SHA1
	quản trị db vẫn thấy pwd 
	db lưu kq băm => quản trị khó thấy
	vì hàm băm ko dịch ngược đc: quản trị db thấy kq băm => ko suy ra đc pw rõ
 - còn 1 pha có thể bị hack:
	bắt gói tin trên đường truyền
	vì client gủi đi uid+pwd rõ (BoOnG)
YOU:
  hãy mã hoá pw ở client, gửi đi kq mã hoá, ko gửi đi bản rõ của pw
  hacker phát lại gói tín của lần login pw mã hoá (xịn) => vẫn hack ok

Giải pháp:  keywork để sv tìm hiểu => thành sp
 - Login form:
	lấy từ api 1 đoạn MUỐI (đoạn 64 kí tự ngẫu nhiên), 
	server đồng thời lưu Muối vào session và gửi về client sid	
 - User:
	user nhập uid+pwd rõ vào form
 - JS Ajax:
	ajax gửi lên: uid, mãhóa(mãhoá(pwd)+muối)) => oằn tà là vèo 1
	và auto gửi kèm lên sid 
 - Cookie:
	all các thứ trong cookie của domain này được auto gửi lên
	cookie là 1 phần của header)
 - Trong cơ sở dữ liệu:
	đã lưu mã hoá hash của pwd
 - hàm Hash: 
	+ Ở trong SQL có hàm HASHBYTES('SHA1', @input) trả về 160 bit output của @input
	  Có nhiều loại: MD2 | MD4 | MD5 | SHA | SHA1 | SHA2_256 | SHA2_512
	  tham khảo: https://learn.microsoft.com/vi-vn/sql/t-sql/functions/hashbytes-transact-sql?view=sql-server-ver16&viewFallbackFrom=sql-server-2022
	+ Trong JS có đối tượng crypto giúp mã hoá
	  tham khảo: https://developer.mozilla.org/en-US/docs/Web/API/Crypto
	  thư viện js mã hoá dùng crypto cho xịn: tham khảo crypto-js.min.js
	+ Hash Là hàm 1 chiều, ko thể dịch ngược từ output Hash ra input Hash
	+ Mỗi thay đổi nhỏ trong input đều sinh ra thay đổi LỚN trong output
 - Server:
	api nhận đc: {pwd đã mã hoá với muối, sid} từ client gửi lên (ajax post lên)
	từ sid=>session=>muối
	từ uid=> db (dll) lấy được db_pwd_hash  (db_pwd_hash= SHA1(pw rõ))
	mãhóa(db_pwd_hash+muối) => oằn tà là vèo 1 
	oằn tà là vèo 1 ở server === oằn tà là vèo 1 gửi lên từ client
	+> xác thực đăng nhập


	ok lắm rồi!

	nhưng...

	hacker thử sai nhiều lần => sẽ có xác suất đúng.
	nếu sai 3 lần thì ngoài 2 thông tin đăg nhập (uid+pwd)
	cần user nhập thêm CAPTCHAR , kèm 1 ảnh cho user nhìn

	vậy code c# asp dot net: có làm đc điều này ko?

	cơ chế:
	phía server 
		- đếm đc số lần login sai: dùng 1 biến đếm trogn sessison
		- nếu dem>3 thì kích hoạt chế độ login cần có captchar
		- SINH RA 1 CHUỖI NGẪU NHIÊN: 6 kí tự trở lên => lưu vào session
		- SINH RA 1 ẢNH chứa NHIỄU, chứa chuỗi ngẫu nhiên trên, có thể cho mỗi kí tự 1 font khác nhau, size khác nhau, cao thấp khác nhau, góc nghiêng khác nhau, đôi khi ko thể đọc được
	client: user
		- nhập uid,pwd,captchar
	server:
		- server nhận đc 3 thông tin trên, captchar gửi lên so sánh với captchar trong session
		- nếu sai captchar thì báo lỗi ngay kể cả uid+pwd ok.


